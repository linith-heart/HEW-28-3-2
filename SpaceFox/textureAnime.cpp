//=============================================================================
//
// テクスチャアニメーション処理 [textureAnime.cpp]
// Author : 宋彦霖
//
//=============================================================================
#include "textureAnime.h"
#include "polygon.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define ALPHA_MIN (0.5f)	// 最小アルファ値
#define ALPHA_MAX (1.0f)	// 最大アルファ値

//*****************************************************************************
// グローバル変数
//*****************************************************************************
int blinkController = 0;	// 点滅制御

//=============================================================================
// フェードイン
//=============================================================================
void TexAniFadein(int no, float rate)
{
	TEX *tx = GetTexture(no);
	
	// 最小アルファ値に達するまで、処理し続く
	if (tx->col.a < ALPHA_MAX)
	{
		tx->col.a += rate;
	}

	// 最小アルファ値に達すると、現アルファ値を修正
	if (tx->col.a >= ALPHA_MAX)
	{
		tx->col.a = ALPHA_MAX;
	}

}

//=============================================================================
// フェードアウト
//=============================================================================
void TexAniFadeout(int no, float rate)
{
	TEX *tx = GetTexture(no);

	// 最小アルファ値に達するまで、処理し続く
	if (tx->col.a > ALPHA_MIN)
	{
		tx->col.a -= rate;
	}

	// 最小アルファ値に達すると、現アルファ値を修正
	if (tx->col.a <= ALPHA_MIN)
	{
		tx->col.a = ALPHA_MIN;
	}

}

//=============================================================================
// 点滅
//=============================================================================
void TexAniBlink(int no, float rate)
{
	TEX *tx = GetTexture(no);

	// 点滅制御、0と1によるフェード処理
	switch (blinkController)
	{
	case 0:
		TexAniFadeout(no, rate);

		// 最小アルファ値に達すると、フェードインに切り替え
		if (tx->col.a <= ALPHA_MIN)
		{
			blinkController = 1;
		}
		break;

	case 1:
		TexAniFadein(no, rate);

		// 最大アルファ値に達すると、フェードアウトに切り替え
		if (tx->col.a >= ALPHA_MAX)
		{
			blinkController = 0;
		}
		break;
	}

}
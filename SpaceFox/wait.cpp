//=============================================================================
//
// 待ち時間処理 [wait.cpp]
// Author : 宋彦霖
//
//=============================================================================
#include "wait.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define WAITTIMER_MAX	(2)		// タイマーの最大数
#define COUNTDOWN_VAL	(1)		// カウントダウン量

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************
bool SceneChange = false;
int Timer_Wait[WAITTIMER_MAX] = { -1 };

//=============================================================================
// 初期化処理（全体）
//=============================================================================
void InitWait(void) 
{
	for (int i = 0; i < WAITTIMER_MAX; i++)
	{
		InitWaitAppoint(i);
	}

}

//=============================================================================
// 初期化処理（指定）
//=============================================================================
void InitWaitAppoint(int no)
{
	Timer_Wait[no] = -1;
}

//=============================================================================
// 時間を設定
//=============================================================================
void SetWait(int no, int time)
{
	Timer_Wait[no] = time;
}

//=============================================================================
// カウントダウン処理
//=============================================================================
void CountDownWait(int no)
{
	Timer_Wait[no] -= COUNTDOWN_VAL;
}

//=============================================================================
// タイマーを取得
//=============================================================================
int GetWait(int no)
{
	return Timer_Wait[no];
}

